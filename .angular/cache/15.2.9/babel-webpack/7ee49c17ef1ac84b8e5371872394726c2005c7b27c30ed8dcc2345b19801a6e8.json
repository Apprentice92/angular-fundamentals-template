{"ast":null,"code":"import { Subscription } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/services/courses-store.service\";\nimport * as i2 from \"@app/user/services/user-store.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../../shared/components/button/button.component\";\nimport * as i5 from \"../../shared/components/info/info.component\";\nimport * as i6 from \"../../shared/components/search/search.component\";\nimport * as i7 from \"@angular/router\";\nimport * as i8 from \"./courses-list/courses-list.component\";\nfunction CoursesComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7, 1);\n    i0.ɵɵtext(2, \" Loading... \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CoursesComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵelement(1, \"app-button\", 9);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CoursesComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-courses-list\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"courses\", ctx_r3.courses)(\"editable\", ctx_r3.isAdmin);\n  }\n}\nfunction CoursesComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"app-info\", 11);\n    i0.ɵɵelement(2, \"app-button\", 9);\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class CoursesComponent {\n  constructor(coursesStoreService, userStoreService) {\n    this.coursesStoreService = coursesStoreService;\n    this.userStoreService = userStoreService;\n    this.subscriptions = new Subscription();\n    this.courses = [];\n    this.isAdmin = false;\n    this.isLoading = false;\n  }\n  ngOnInit() {\n    this.isLoading = true;\n    this.coursesStoreService.getAll();\n    const coursesSubscription = this.coursesStoreService.courses$.subscribe(courses => {\n      this.courses = courses;\n      this.isLoading = false;\n      console.log(\"Courses loaded:\", courses);\n    }, error => {\n      console.error(\"Failed to load courses\", error);\n      this.isLoading = false;\n    });\n    const adminSubscription = this.userStoreService.isAdmin$.subscribe(isAdmin => {\n      this.isAdmin = isAdmin;\n    }, error => {\n      console.error(\"Failed to determine admin status\", error);\n    });\n    this.subscriptions.add(coursesSubscription);\n    this.subscriptions.add(adminSubscription);\n  }\n  filterCourses(event) {\n    this.coursesStoreService.filterCourses({\n      title: event\n    });\n  }\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n}\nCoursesComponent.ɵfac = function CoursesComponent_Factory(t) {\n  return new (t || CoursesComponent)(i0.ɵɵdirectiveInject(i1.CoursesStoreService), i0.ɵɵdirectiveInject(i2.UserStoreService));\n};\nCoursesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CoursesComponent,\n  selectors: [[\"app-courses\"]],\n  decls: 9,\n  vars: 4,\n  consts: [[\"else\", \"\", 4, \"ngIf\"], [\"content\", \"\"], [1, \"search_with_add\"], [1, \"search-container\"], [3, \"clickOnShow\"], [\"class\", \"add-container\", 4, \"ngIf\"], [4, \"ngIf\"], [\"else\", \"\"], [1, \"add-container\"], [\"buttonText\", \"Add new course\", \"routerLink\", \"/courses/add\"], [3, \"courses\", \"editable\"], [\"title\", \"Your List is Empty\", \"text\", \"Please use 'Add New Course' button to add your first course\"]],\n  template: function CoursesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CoursesComponent_div_0_Template, 3, 0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", null, 1)(3, \"div\", 2)(4, \"div\", 3)(5, \"app-search\", 4);\n      i0.ɵɵlistener(\"clickOnShow\", function CoursesComponent_Template_app_search_clickOnShow_5_listener($event) {\n        return ctx.filterCourses($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(6, CoursesComponent_div_6_Template, 2, 0, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(7, CoursesComponent_div_7_Template, 2, 2, \"div\", 6);\n      i0.ɵɵtemplate(8, CoursesComponent_div_8_Template, 3, 0, \"div\", 6);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.isAdmin);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.courses != null);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.courses == null || ctx.courses.length === 0);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ButtonComponent, i5.InfoComponent, i6.SearchComponent, i7.RouterLink, i8.CoursesListComponent],\n  styles: [\".search_with_add[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    justify-content: space-between;\\r\\n    align-items: center;\\r\\n    padding: 10px;\\r\\n  }\\r\\n  .search-container[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    gap: 10px; \\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmVhdHVyZXMvY291cnNlcy9jb3Vyc2VzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsOEJBQThCO0lBQzlCLG1CQUFtQjtJQUNuQixhQUFhO0VBQ2Y7RUFDQTtJQUNFLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsU0FBUyxFQUFFLDJEQUEyRDtFQUN4RSIsInNvdXJjZXNDb250ZW50IjpbIi5zZWFyY2hfd2l0aF9hZGQge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gIH1cclxuICAuc2VhcmNoLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGdhcDogMTBweDsgLyogQWRqdXN0IHRoZSBzcGFjZSBiZXR3ZWVuIHRoZSBzZWFyY2ggYmFyIGFuZCB0aGUgYnV0dG9uICovXHJcbiAgfSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AAIA,SAASA,YAAY,QAAQ,MAAM;;;;;;;;;;;;ICJnCC,iCAAqC;IACjCA,4BACF;IAAAA,iBAAM;;;;;IAMFA,8BAA2C;IACzCA,gCAA+E;IACjFA,iBAAM;;;;;IAERA,2BAA6B;IAC3BA,uCAA8E;IAChFA,iBAAM;;;;IADcA,eAAmB;IAAnBA,wCAAmB;;;;;IAEvCA,2BAAqD;IAEjDA,gCAA+E;IACjFA,iBAAW;;;ADNjB,OAAM,MAAOC,gBAAgB;EAM3BC,YACUC,mBAAwC,EACxCC,gBAAkC;IADlC,wBAAmB,GAAnBD,mBAAmB;IACnB,qBAAgB,GAAhBC,gBAAgB;IAPlB,kBAAa,GAAG,IAAIL,YAAY,EAAE;IAE1C,YAAO,GAAgB,EAAE;IACzB,YAAO,GAAY,KAAK;IACxB,cAAS,GAAY,KAAK;EAIvB;EACHM,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,CAACH,mBAAmB,CAACI,MAAM,EAAE;IACjC,MAAMC,mBAAmB,GAAG,IAAI,CAACL,mBAAmB,CAACM,QAAQ,CAACC,SAAS,CACpEC,OAAO,IAAI;MACV,IAAI,CAACA,OAAO,GAAGA,OAAO;MACtB,IAAI,CAACL,SAAS,GAAG,KAAK;MACtBM,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,OAAO,CAAC;IACzC,CAAC,EACAG,KAAK,IAAI;MACRF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,IAAI,CAACR,SAAS,GAAG,KAAK;IACxB,CAAC,CACF;IACD,MAAMS,iBAAiB,GAAG,IAAI,CAACX,gBAAgB,CAACY,QAAQ,CAACN,SAAS,CAC/DO,OAAO,IAAI;MACV,IAAI,CAACA,OAAO,GAAGA,OAAO;IACxB,CAAC,EACAH,KAAK,IAAI;MACRF,OAAO,CAACE,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D,CAAC,CACF;IACD,IAAI,CAACI,aAAa,CAACC,GAAG,CAACX,mBAAmB,CAAC;IAC3C,IAAI,CAACU,aAAa,CAACC,GAAG,CAACJ,iBAAiB,CAAC;EAC3C;EACAK,aAAa,CAACC,KAAU;IACtB,IAAI,CAAClB,mBAAmB,CAACiB,aAAa,CAAC;MAAEE,KAAK,EAAED;IAAK,CAAE,CAAC;EAC1D;EACAE,WAAW;IACT,IAAI,CAACL,aAAa,CAACM,WAAW,EAAE;EAClC;;AAxCWvB,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAwB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ7B7B,iEAEQ;MACNA,oCAAc;MAGIA;QAAA,OAAe8B,yBAAqB;MAAA,EAAC;MAAC9B,iBAAa;MAEjEA,iEAEM;MACRA,iBAAM;MACNA,iEAEM;MACNA,iEAIM;MACRA,iBAAM;;;MApBFA,oCAAe;MAQaA,eAAa;MAAbA,kCAAa;MAIrCA,eAAqB;MAArBA,0CAAqB;MAGrBA,eAA6C;MAA7CA,sEAA6C","names":["Subscription","i0","CoursesComponent","constructor","coursesStoreService","userStoreService","ngOnInit","isLoading","getAll","coursesSubscription","courses$","subscribe","courses","console","log","error","adminSubscription","isAdmin$","isAdmin","subscriptions","add","filterCourses","event","title","ngOnDestroy","unsubscribe","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Prog\\EPAM2\\Angular1\\angular-fundamentals-template\\src\\app\\features\\courses\\courses.component.ts","C:\\Prog\\EPAM2\\Angular1\\angular-fundamentals-template\\src\\app\\features\\courses\\courses.component.html"],"sourcesContent":["import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { CoursesStoreService } from \"@app/services/courses-store.service\";\nimport { CourseDTO } from \"@app/services/course-info\";\nimport { UserStoreService } from \"@app/user/services/user-store.service\";\nimport { Subscription } from \"rxjs\";\n\n@Component({\n  selector: 'app-courses',\n  templateUrl: './courses.component.html',\n  styleUrls: ['./courses.component.css']\n})\n\nexport class CoursesComponent implements OnInit, OnDestroy {\n  private subscriptions = new Subscription();\n\n  courses: CourseDTO[] = [];\n  isAdmin: boolean = false;\n  isLoading: boolean = false;\n  constructor(\n    private coursesStoreService: CoursesStoreService,\n    private userStoreService: UserStoreService\n  ) {}\n  ngOnInit() {\n    this.isLoading = true;\n    this.coursesStoreService.getAll();\n    const coursesSubscription = this.coursesStoreService.courses$.subscribe(\n      (courses) => {\n        this.courses = courses;\n        this.isLoading = false;\n        console.log(\"Courses loaded:\", courses);\n      },\n      (error) => {\n        console.error(\"Failed to load courses\", error);\n        this.isLoading = false;\n      }\n    );\n    const adminSubscription = this.userStoreService.isAdmin$.subscribe(\n      (isAdmin) => {\n        this.isAdmin = isAdmin;\n      },\n      (error) => {\n        console.error(\"Failed to determine admin status\", error);\n      }\n    );\n    this.subscriptions.add(coursesSubscription);\n    this.subscriptions.add(adminSubscription);\n  }\n  filterCourses(event: any) {\n    this.coursesStoreService.filterCourses({ title: event });\n  }\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n}","<div *ngIf=\"isLoading\" else #content>\n    Loading...\n  </div>\n  <div #content>\n    <div class=\"search_with_add\">\n      <div class=\"search-container\">\n        <app-search (clickOnShow)=\"filterCourses($event)\"></app-search>\n      </div>\n      <div class=\"add-container\" *ngIf=\"isAdmin\">\n        <app-button buttonText=\"Add new course\" routerLink=\"/courses/add\"></app-button>\n      </div>\n    </div>\n    <div *ngIf=\"courses != null\">\n      <app-courses-list [courses]=\"courses\" [editable]=\"isAdmin\"></app-courses-list>\n    </div>\n    <div *ngIf=\"courses == null || courses.length === 0\">\n      <app-info title=\"Your List is Empty\" text=\"Please use 'Add New Course' button to add your first course\">\n        <app-button buttonText=\"Add new course\" routerLink=\"/courses/add\"></app-button>\n      </app-info>\n    </div>\n  </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}