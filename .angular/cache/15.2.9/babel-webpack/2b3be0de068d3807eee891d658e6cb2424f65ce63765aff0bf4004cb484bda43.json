{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class DurationPipe {\n  transform(value) {\n    if (!value && value !== 0) {\n      return '';\n    }\n    const hours = Math.floor(value / 60);\n    const minutes = value % 60;\n    const paddedHours = hours.toString().padStart(2, '0');\n    const paddedMinutes = minutes.toString().padStart(2, '0');\n    const hourLabel = hours === 1 ? 'hour' : 'hours';\n    return `${paddedHours}:${paddedMinutes} ${hourLabel}`;\n  }\n}\nDurationPipe.ɵfac = function DurationPipe_Factory(t) {\n  return new (t || DurationPipe)();\n};\nDurationPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"duration\",\n  type: DurationPipe,\n  pure: true\n});","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,YAAY;EACrBC,SAAS,CAACC,KAAa;IACnB,IAAI,CAACA,KAAK,IAAIA,KAAK,KAAK,CAAC,EAAE;MACvB,OAAO,EAAE;;IAGb,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,GAAG,EAAE,CAAC;IACpC,MAAMI,OAAO,GAAGJ,KAAK,GAAG,EAAE;IAE1B,MAAMK,WAAW,GAAGJ,KAAK,CAACK,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACrD,MAAMC,aAAa,GAAGJ,OAAO,CAACE,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAEzD,MAAME,SAAS,GAAGR,KAAK,KAAK,CAAC,GAAG,MAAM,GAAG,OAAO;IAEhD,OAAO,GAAGI,WAAW,IAAIG,aAAa,IAAIC,SAAS,EAAE;EACzD;;AAfSX,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;;QAAZA,YAAY;EAAAY;AAAA","names":["DurationPipe","transform","value","hours","Math","floor","minutes","paddedHours","toString","padStart","paddedMinutes","hourLabel","pure"],"sourceRoot":"","sources":["C:\\Prog\\EPAM2\\Angular1\\angular-fundamentals-template\\src\\app\\shared\\pipes\\duration.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({\r\n    name: 'duration'\r\n})\r\n\r\nexport class DurationPipe implements PipeTransform {\r\n    transform(value: number): string {\r\n        if (!value && value !== 0) {\r\n            return '';\r\n        }\r\n\r\n        const hours = Math.floor(value / 60);\r\n        const minutes = value % 60;\r\n\r\n        const paddedHours = hours.toString().padStart(2, '0');\r\n        const paddedMinutes = minutes.toString().padStart(2, '0');\r\n\r\n        const hourLabel = hours === 1 ? 'hour' : 'hours';\r\n\r\n        return `${paddedHours}:${paddedMinutes} ${hourLabel}`;\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}